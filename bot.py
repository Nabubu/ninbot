from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
from config import TELEGRAM_BOT_TOKEN
from logic import load_games, find_combination, suggest_topup

user_states = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –í–≤–µ–¥–∏ —Å–≤–æ–π —Ä–µ–≥–∏–æ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä: US, PL):")
    user_states[update.effective_user.id] = {"step": "awaiting_region"}

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    text = update.message.text.strip()
    state = user_states.get(user_id, {})

    if state.get("step") == "awaiting_region":
        state["region"] = text.upper()
        state["step"] = "awaiting_balance"
        await update.message.reply_text("üí∞ –í–≤–µ–¥–∏ —Å–≤–æ–π –±–∞–ª–∞–Ω—Å –≤ —Ñ–æ—Ä–º–∞—Ç–µ 4.99:")

    elif state.get("step") == "awaiting_balance":
        try:
            balance = float(text.replace(",", "."))
            games = load_games(state["region"])
            result, leftover = find_combination(balance, games)

            if leftover == 0 and result:
                reply = "üéÆ –ò–≥—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å:\n"
                for game in result:
                    reply += f"- {game['title']} ‚Äî ${game['price']} ‚Äî [–°—Å—ã–ª–∫–∞]({game['url']})\n"
                reply += "\n‚úÖ –ë–∞–ª–∞–Ω—Å –±—É–¥–µ—Ç –æ–±–Ω—É–ª–µ–Ω!"
                await update.message.reply_text(reply, parse_mode="Markdown")
            else:
                topup, combo = suggest_topup(balance, games)
                if topup:
                    reply = f"üí° –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞ ${topup} –∏ –∫—É–ø–∏—Ç–µ:\n"
                    for game in combo:
                        reply += f"- {game['title']} ‚Äî ${game['price']} ‚Äî [–°—Å—ã–ª–∫–∞]({game['url']})\n"
                    reply += "\nüéØ –ë–∞–ª–∞–Ω—Å –±—É–¥–µ—Ç –æ–±–Ω—É–ª–µ–Ω!"
                else:
                    reply = "üôÅ –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∏–≥—Ä—ã –¥–∞–∂–µ —Å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º."
                await update.message.reply_text(reply, parse_mode="Markdown")
        except ValueError:
            await update.message.reply_text("‚ùó –í–≤–µ–¥–∏ –±–∞–ª–∞–Ω—Å –≤ —Ñ–æ—Ä–º–∞—Ç–µ 4.99")

    user_states[user_id] = state

if __name__ == "__main__":
    app = ApplicationBuilder().token(TELEGRAM_BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.run_polling()